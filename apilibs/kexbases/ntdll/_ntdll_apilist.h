/*
 *  KernelEx
 *  Copyright (C) 2008, Xeno86
 *
 *  This file is part of KernelEx source code.
 *
 *  KernelEx is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published
 *  by the Free Software Foundation; version 2 of the License.
 *
 *  KernelEx is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with GNU Make; see the file COPYING.  If not, write to
 *  the Free Software Foundation, 675 Mass Ave, Cambridge, MA 02139, USA.
 *
 */

#ifndef _NTDLL_APILIST_H
#define _NTDLL_APILIST_H

#include <windows.h>
#include <ntsecapi.h>
#include "common.h"
#include "../kernel32/_kernel32_apilist.h"

typedef PLSA_OBJECT_ATTRIBUTES POBJECT_ATTRIBUTES;

#define STATUS_SUCCESS ((NTSTATUS)0x00000000L)
#define STATUS_INVALID_PARAMETER ((NTSTATUS)0xC000000DL)

typedef struct _CLIENT_ID
{
     DWORD UniqueProcessId;
     DWORD UniqueThreadId;
} CLIENT_ID, *PCLIENT_ID;

BOOL init_ntdll();
extern const apilib_api_table apitable_ntdll;

/*** AUTOGENERATED APILIST DECLARATIONS BEGIN ***/
STUB NtCreateProcess_stub;
STUB NtShutdownSystem_stub;
STUB NtCreateThread_stub;
STUB ZwCreateProcess_stub;
STUB ZwShutdownSystem_stub;
STUB ZwCreateThread_stub;
NTSTATUS NTAPI ZwOpenProcess(OUT PHANDLE ProcessHandle, IN ACCESS_MASK AccessMask, IN POBJECT_ATTRIBUTES ObjectAttributes, IN PCLIENT_ID ClientId);
NTSTATUS NTAPI ZwResumeProcess(IN HANDLE ProcessHandle);
NTSTATUS NTAPI ZwSuspendProcess(IN HANDLE ProcessHandle);
NTSTATUS NTAPI ZwTerminateProcess(IN HANDLE ProcessHandle OPTIONAL, IN NTSTATUS ExitStatus);
NTSTATUS NTAPI ZwSetContextThread(IN HANDLE ThreadHandle, IN PCONTEXT Context);
NTSTATUS NTAPI ZwGetContextThread(IN HANDLE ThreadHandle, OUT PCONTEXT pContext);
NTSTATUS NTAPI ZwOpenThread(OUT PHANDLE ThreadHandle, IN ACCESS_MASK AccessMask, IN POBJECT_ATTRIBUTES ObjectAttributes, IN PCLIENT_ID ClientId);
NTSTATUS NTAPI ZwResumeThread(IN HANDLE ThreadHandle, OUT PULONG SuspendCount OPTIONAL);
NTSTATUS NTAPI ZwSuspendThread(IN HANDLE ThreadHandle, OUT PULONG PreviousSuspendCount OPTIONAL);
NTSTATUS NTAPI ZwTerminateThread(IN HANDLE ThreadHandle, IN NTSTATUS ExitStatus);
/*** AUTOGENERATED APILIST DECLARATIONS END ***/

#endif
